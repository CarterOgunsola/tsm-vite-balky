import "../styles/index.css";
import { Core } from "@unseenco/taxi";
import { pageLoader } from "./transitions/pageLoader";
//import Canvas from "./animations/canvas";
import setupCurtains from "./animations/canvas";
import barba from "@barba/core";
import gsap from "gsap";

// import { showBody } from "./animations/starter";
import {
  // lenis,
  handleActiveStateOnLinks,
} from "./animations/smoothScroll";
import initGallerySlider from "./animations/workSlider";
import tsmPlyr from "./utils/plyr";
import { startClock } from "./utils/clock";
import { initializeVideoPreviews } from "./animations/workPageVid";
import { toggleView } from "./animations/workGrid";
import { initializeFilterAnimation } from "./animations/workFilter";
import { setupFiltering } from "./animations/workFilterList";
import { initializeMarquee } from "./animations/projectMarquee";
import { generalAnimation } from "./animations/generalAnimation";
import DefaultRenderer from "./renderer/DefaultRenderer";
import {
  enterTransition,
  leaveTransition,
} from "./transitions/DefaultTransition";
import { calculator } from "./utils/price-calc";
import { resetWebflow } from "./utils/resetWefblow";

// Initialize curtains setup once the window is fully loaded
window.addEventListener("load", setupCurtains);

// Consolidated DOMContentLoaded listener
document.addEventListener("DOMContentLoaded", () => {
  handleActiveStateOnLinks();
  pageLoader();
  resetWebflow();

  initFeature(".home-page", initGallerySlider);
  initFeature(".plyr_component", tsmPlyr);
  initFeature(".page-wrapper", startClock);
  initFeature(".work-cms-page, .about-page", initializeMarquee);
  initFeature(
    ".work-page",
    toggleView,
    initializeFilterAnimation,
    setupFiltering,
    initializeVideoPreviews,
  );
  initFeature(".contact-page", calculator);

  generalAnimation();

  const transitions = barba.init({
    transitions: [
      {
        name: "default-transition",
        sync: true,
        leave(data) {
          const done = this.async();
          leaveTransition(data.current.container, done);
        },
        enter(data) {
          const done = this.async();
          enterTransition(data.next.container, done);
        },
        beforeEnter(data) {
          gsap.set(data.next.container, {
            position: "fixed",
            width: "100%",
            height: "100%",
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
          });
        },
        afterEnter(data) {
          gsap.set(data.next.container, {
            position: "static",
            width: "auto",
            height: "auto",
            top: "auto",
            left: "auto",
            right: "auto",
            bottom: "auto",
          });
        },
      },
    ],
    debug: true,
  });
});

barba.hooks.once(() => {
  pageLoader();
});

barba.hooks.after(() => {
  setupCurtains();
  window.scrollTo(0, 0);
  reinitializeFeatures();
  resetWebflow();
});

barba.hooks.enter(() => {
  // setupCurtains();
});

function initFeature(selector, ...functions) {
  const element = document.querySelector(selector);
  if (element) {
    functions.forEach((func) => func());
  }
}

function reinitializeFeatures() {
  handleActiveStateOnLinks();
  pageLoader();
  initFeature(".home-page", initGallerySlider);
  initFeature(".plyr_component", tsmPlyr);
  initFeature(".page-wrapper", startClock);
  initFeature(".work-cms-page, .about-page", initializeMarquee);
  initFeature(
    ".work-page",
    toggleView,
    initializeFilterAnimation,
    setupFiltering,
    initializeVideoPreviews,
  );
  initFeature(".contact-page", calculator);
  generalAnimation();
  console.log("All the scripts are reinitialized");
}
